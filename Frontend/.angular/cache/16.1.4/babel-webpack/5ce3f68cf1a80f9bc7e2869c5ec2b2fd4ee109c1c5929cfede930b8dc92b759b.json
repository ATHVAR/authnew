{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserdataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/users'; // Update the URL to your backend API endpoint\n  }\n\n  addUser(user) {\n    return this.http.post(`${this.apiUrl}`, user);\n  }\n  getUsers() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  getUserById(userId) {\n    return this.http.get(`${this.apiUrl}/${userId}`);\n  }\n  updateUser(userId, user) {\n    return this.http.put(`${this.apiUrl}/${userId}`, user);\n  }\n  deleteUser(userId) {\n    return this.http.delete(`${this.apiUrl}/${userId}`);\n  }\n}\nUserdataService.ɵfac = function UserdataService_Factory(t) {\n  return new (t || UserdataService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserdataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserdataService,\n  factory: UserdataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserdataService","constructor","http","apiUrl","addUser","user","post","getUsers","get","getUserById","userId","updateUser","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ATHIRA\\Desktop\\New folder (2)\\Main_project-master\\Main_project-master\\Frontend\\src\\app\\shared\\userdata.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserdataService {\n  private apiUrl = 'http://localhost:3000/api/users'; // Update the URL to your backend API endpoint\n\n  constructor(private http: HttpClient) { }\n\n  addUser(user: any): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}`, user);\n  }\n\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}`);\n  }\n\n  getUserById(userId: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/${userId}`);\n  }\n\n  updateUser(userId: string, user: any): Observable<any> {\n    return this.http.put<any>(`${this.apiUrl}/${userId}`, user);\n  }\n\n  deleteUser(userId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiUrl}/${userId}`);\n  }\n}\n\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC,CAAC,CAAC;EAEZ;;EAExCC,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,MAAM,EAAE,EAAEE,IAAI,CAAC;EACpD;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,EAAE,CAAC;EAC/C;EAEAM,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,MAAM,IAAIO,MAAM,EAAE,CAAC;EACvD;EAEAC,UAAUA,CAACD,MAAc,EAAEL,IAAS;IAClC,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,MAAM,IAAIO,MAAM,EAAE,EAAEL,IAAI,CAAC;EAC7D;EAEAQ,UAAUA,CAACH,MAAc;IACvB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAM,GAAG,IAAI,CAACX,MAAM,IAAIO,MAAM,EAAE,CAAC;EAC1D;;AAvBWV,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}